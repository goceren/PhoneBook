@model PhoneBook.Web.Entities.Dto.Book.BookDto
@using PhoneBook.Web.Core.Enum
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h5 id="title">@Model.Name @(Model.LastName)'s Contacts</h5>
    <table class="table table-bordered" id="bookContactTable">
        <thead>
            <tr>
                <th scope="col">UUID</th>
                <th scope="col">BookUUID</th>
                <th scope="col">Type</th>
                <th scope="col">Information</th>
                <th scope="col"><button type="button" onclick="InsertBookContact()" class=" btn btn-success">Add</button></th>
            </tr>
        </thead>
        <tbody id="bookContactBody">
        </tbody>
    </table>
</div>

<script>

    LoadBookTable();

    function LoadBookTable() {
        $('#bookContactBody').html('');
        $.ajax({
            url: '@Url.Action("GetListByBook","BookContact")',
            type: 'POST',
            dataType: 'json',
            data: { bookUuid: '@Model.UUID' },
            success: function (response) {
                if (response.StatusCode == '@(Enums.ResponseStatusEnum.Success.GetEnumInteger())' && response.Data.length > 0) {
                    console.log(response.Data);
                    response.Data.forEach((item) => {
                        let innerHtml =
                            '<tr>' +
                            '<th>' + item.UUID + '</th>' +
                            '<td>' + item.BookUUID + '</td>' +
                            '<td>' + (item.Type == '@(Enums.ContactTypeEnum.Email.GetEnumInteger())' ? "Email" : item.Type == '@(Enums.ContactTypeEnum.Phone.GetEnumInteger())' ? "Phone" : "Location") + '</td>' +
                            '<td>' + item.Information + '</td>' +
                            `<td><button onclick="EditBookContact('` + item.UUID + `')" type="button" class="btn btn-primary">Edit</button>` +
                            `<button onclick="DeleteBookContact('` + item.UUID + `')" type="button" class="btn btn-danger">Delete</button>` +
                            `</td>` +
                            '</tr>';
                        $('#bookContactBody').append(innerHtml);
                    });
                }
            },
            error: function (hata) {

            }
        });
    }

</script>


<script>

    function InsertBookContact(uuid) {
        $.ajax({
            url: '@Url.Action("InsertModal","BookContact")',
            type: 'POST',
            dataType: 'json',
            data: { bookUuid: '@Model.UUID' },
            success: function (response) {
                if (response.StatusCode == '@(Enums.ResponseStatusEnum.Success.GetEnumInteger())') {
                    console.log(response)
                    console.log(response.Data)
                    ShowBootbox('Insert', 'fa-solid fa-pen-to-square',
                        response.Data,
                        [],
                        'large',
                        'modal-primary',
                        'false'
                    );
                }
            },
            error: function (hata) {

            }
        });
    }

    function EditBookContact(uuid) {
        $.ajax({
            url: '@Url.Action("EditModal","BookContact")',
            type: 'POST',
            dataType: 'json',
            data: { uuid: uuid },
            success: function (response) {
                if (response.StatusCode == '@(Enums.ResponseStatusEnum.Success.GetEnumInteger())') {
                    ShowBootbox('Edit', 'fa-solid fa-pen-to-square',
                        response.Data,
                        [],
                        'large',
                        'modal-primary',
                        'false'
                    );
                }
                else{
                    $('#bookBody').append(response.Errors[0]);
                }
            },
            error: function (hata) {

            }
        });
    }

    function DeleteBookContact(uuid) {
        $.ajax({
            url: '@Url.Action("Delete","BookContact")',
            type: 'POST',
            dataType: 'json',
            data: { uuid: uuid },
            success: function (response) {
                if (response.StatusCode == '@(Enums.ResponseStatusEnum.Success.GetEnumInteger())') {
                    LoadBookTable();
                }
            },
            error: function (hata) {

            }
        });
    }

</script>
